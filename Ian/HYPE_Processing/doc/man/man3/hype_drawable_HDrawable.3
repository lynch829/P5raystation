.TH "hype.drawable.HDrawable" 3 "Wed May 15 2013" "HYPE_processing" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hype.drawable.HDrawable \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits HNode< HDrawable >, \fBhype\&.interfaces\&.HSwarmer\fP, \fBhype\&.interfaces\&.HFollowable\fP, and \fBhype\&.interfaces\&.HHittable\fP\&.
.PP
Inherited by \fBhype\&.drawable\&.HEllipse\fP, \fBhype\&.drawable\&.HGroup\fP, \fBhype\&.drawable\&.HImage\fP, \fBhype\&.drawable\&.HPath\fP, \fBhype\&.drawable\&.HRect\fP, \fBhype\&.drawable\&.HShape\fP, \fBhype\&.drawable\&.HStage\fP, \fBhype\&.drawable\&.HText\fP, and \fBhype\&.drawable\&.HTriangle\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBHDrawableIterator\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBcopyPropertiesFrom\fP (\fBHDrawable\fP other)"
.br
.ti -1c
.RI "abstract \fBHDrawable\fP \fBcreateCopy\fP ()"
.br
.ti -1c
.RI "boolean \fBpoppedOut\fP ()"
.br
.ti -1c
.RI "void \fBpopOut\fP ()"
.br
.ti -1c
.RI "void \fBputBefore\fP (\fBHDrawable\fP dest)"
.br
.ti -1c
.RI "void \fBputAfter\fP (\fBHDrawable\fP dest)"
.br
.ti -1c
.RI "void \fBswapLeft\fP ()"
.br
.ti -1c
.RI "void \fBswapRight\fP ()"
.br
.ti -1c
.RI "void \fBreplaceNode\fP (\fBHDrawable\fP dest)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBparent\fP ()"
.br
.ti -1c
.RI "boolean \fBparentOf\fP (\fBHDrawable\fP d)"
.br
.ti -1c
.RI "int \fBnumChildren\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBadd\fP (\fBHDrawable\fP child)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBremove\fP (\fBHDrawable\fP child)"
.br
.ti -1c
.RI "\fBHDrawableIterator\fP \fBiterator\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBloc\fP (float newX, float newY)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBloc\fP (PVector pt)"
.br
.ti -1c
.RI "PVector \fBloc\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBx\fP (float newX)"
.br
.ti -1c
.RI "float \fBx\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBy\fP (float newY)"
.br
.ti -1c
.RI "float \fBy\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBmove\fP (float dx, float dy)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBlocAt\fP (int where)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBanchor\fP (float pxX, float pxY)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBanchor\fP (PVector pt)"
.br
.ti -1c
.RI "PVector \fBanchor\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBanchorX\fP (float pxX)"
.br
.ti -1c
.RI "float \fBanchorX\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBanchorY\fP (float pxY)"
.br
.ti -1c
.RI "float \fBanchorY\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBanchorPerc\fP (float percX, float percY)"
.br
.ti -1c
.RI "PVector \fBanchorPerc\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBanchorPercX\fP (float percX)"
.br
.ti -1c
.RI "float \fBanchorPercX\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBanchorPercY\fP (float percY)"
.br
.ti -1c
.RI "float \fBanchorPercY\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBanchorAt\fP (int where)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBsize\fP (float w, float h)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBsize\fP (float s)"
.br
.ti -1c
.RI "PVector \fBsize\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBwidth\fP (float w)"
.br
.ti -1c
.RI "float \fBwidth\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBheight\fP (float h)"
.br
.ti -1c
.RI "float \fBheight\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBscale\fP (float s)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBscale\fP (float sw, float sh)"
.br
.ti -1c
.RI "PVector \fBboundingSize\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBfill\fP (int clr)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBfill\fP (int clr, int alpha)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBfill\fP (int r, int g, int b)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBfill\fP (int r, int g, int b, int a)"
.br
.ti -1c
.RI "int \fBfill\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBnoFill\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBstroke\fP (int clr)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBstroke\fP (int clr, int alpha)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBstroke\fP (int r, int g, int b)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBstroke\fP (int r, int g, int b, int a)"
.br
.ti -1c
.RI "int \fBstroke\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBnoStroke\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBstrokeCap\fP (int type)"
.br
.ti -1c
.RI "int \fBstrokeCap\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBstrokeJoin\fP (int type)"
.br
.ti -1c
.RI "int \fBstrokeJoin\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBstrokeWeight\fP (float f)"
.br
.ti -1c
.RI "float \fBstrokeWeight\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBrotation\fP (float deg)"
.br
.ti -1c
.RI "float \fBrotation\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBrotationRad\fP (float rad)"
.br
.ti -1c
.RI "float \fBrotationRad\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBrotate\fP (float deg)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBrotateRad\fP (float rad)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBalpha\fP (int a)"
.br
.ti -1c
.RI "int \fBalpha\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBalphaPerc\fP (float aPerc)"
.br
.ti -1c
.RI "float \fBalphaPerc\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBvisibility\fP (boolean v)"
.br
.ti -1c
.RI "boolean \fBvisibility\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBshow\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBhide\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBalphaShift\fP (int da)"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBalphaShiftPerc\fP (float daPerc)"
.br
.ti -1c
.RI "float \fBfollowableX\fP ()"
.br
.ti -1c
.RI "float \fBfollowableY\fP ()"
.br
.ti -1c
.RI "\fBHDrawable\fP \fBextras\fP (\fBHBundle\fP b)"
.br
.ti -1c
.RI "\fBHBundle\fP \fBextras\fP ()"
.br
.ti -1c
.RI "boolean \fBcontains\fP (float absX, float absY)"
.br
.ti -1c
.RI "boolean \fBcontainsRel\fP (float relX, float relY)"
.br
.ti -1c
.RI "void \fBpaintAll\fP (PApplet app, float currAlphaPerc)"
.br
.ti -1c
.RI "abstract void \fBdraw\fP (PApplet app, float drawX, float drawY, float currAlphaPerc)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "boolean \fBinvalidDest\fP (\fBHDrawable\fP dest, String warnLoc)"
.br
.ti -1c
.RI "void \fBapplyStyle\fP (PApplet app, float currAlphaPerc)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBHDrawable\fP \fB_parent\fP"
.br
.ti -1c
.RI "\fBHBundle\fP \fB_extras\fP"
.br
.ti -1c
.RI "float \fB_x\fP"
.br
.ti -1c
.RI "int \fB_numChildren\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for HYPE_processing from the source code\&.
